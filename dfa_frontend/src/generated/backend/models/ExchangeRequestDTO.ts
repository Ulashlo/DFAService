/* tslint:disable */
/* eslint-disable */
/**
 * App API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: snapshot
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Info for creation request to exchange.
 * @export
 * @interface ExchangeRequestDTO
 */
export interface ExchangeRequestDTO {
    /**
     * Divisible or indivisible.
     * @type {string}
     * @memberof ExchangeRequestDTO
     */
    type: ExchangeRequestDTOTypeEnum;
    /**
     * Dfa, user want to get.
     * @type {string}
     * @memberof ExchangeRequestDTO
     */
    dfaToGet: string;
    /**
     * Amount of dfa, user want to get.
     * @type {number}
     * @memberof ExchangeRequestDTO
     */
    amountToGet: number;
    /**
     * Dfa, user want to give.
     * @type {string}
     * @memberof ExchangeRequestDTO
     */
    dfaToGive: string;
    /**
     * Amount of dfa, user want to give.
     * @type {number}
     * @memberof ExchangeRequestDTO
     */
    amountToGive: number;
    /**
     * End time.
     * @type {number}
     * @memberof ExchangeRequestDTO
     */
    endTime: number;
}

export function ExchangeRequestDTOFromJSON(json: any): ExchangeRequestDTO {
    return ExchangeRequestDTOFromJSONTyped(json, false);
}

export function ExchangeRequestDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExchangeRequestDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'dfaToGet': json['dfaToGet'],
        'amountToGet': json['amountToGet'],
        'dfaToGive': json['dfaToGive'],
        'amountToGive': json['amountToGive'],
        'endTime': json['endTime'],
    };
}

export function ExchangeRequestDTOToJSON(value?: ExchangeRequestDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'dfaToGet': value.dfaToGet,
        'amountToGet': value.amountToGet,
        'dfaToGive': value.dfaToGive,
        'amountToGive': value.amountToGive,
        'endTime': value.endTime,
    };
}

/**
* @export
* @enum {string}
*/
export enum ExchangeRequestDTOTypeEnum {
    INDIVISIBLE = 'INDIVISIBLE',
    DIVISIBLE = 'DIVISIBLE'
}


