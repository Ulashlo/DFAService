/* tslint:disable */
/* eslint-disable */
/**
 * App API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: snapshot
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ApiError,
    ApiErrorFromJSON,
    ApiErrorToJSON,
    UserInfoForUpdateDTO,
    UserInfoForUpdateDTOFromJSON,
    UserInfoForUpdateDTOToJSON,
    UserViewDTO,
    UserViewDTOFromJSON,
    UserViewDTOToJSON,
} from '../models';

export interface UpdateUserInfoRequest {
    userInfoForUpdateDTO: UserInfoForUpdateDTO;
}

/**
 * UserControllerApi - interface
 * 
 * @export
 * @interface UserControllerApiInterface
 */
export interface UserControllerApiInterface {
    /**
     * 
     * @summary Return current user info.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserControllerApiInterface
     */
    getUserInfoRaw(): Promise<runtime.ApiResponse<UserViewDTO>>;

    /**
     * Return current user info.
     */
    getUserInfo(): Promise<UserViewDTO>;

    /**
     * 
     * @summary Update current user info.
     * @param {UserInfoForUpdateDTO} userInfoForUpdateDTO 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserControllerApiInterface
     */
    updateUserInfoRaw(requestParameters: UpdateUserInfoRequest): Promise<runtime.ApiResponse<void>>;

    /**
     * Update current user info.
     */
    updateUserInfo(requestParameters: UpdateUserInfoRequest): Promise<void>;

}

/**
 * 
 */
export class UserControllerApi extends runtime.BaseAPI implements UserControllerApiInterface {

    /**
     * Return current user info.
     */
    async getUserInfoRaw(): Promise<runtime.ApiResponse<UserViewDTO>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/safe/user`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => UserViewDTOFromJSON(jsonValue));
    }

    /**
     * Return current user info.
     */
    async getUserInfo(): Promise<UserViewDTO> {
        const response = await this.getUserInfoRaw();
        return await response.value();
    }

    /**
     * Update current user info.
     */
    async updateUserInfoRaw(requestParameters: UpdateUserInfoRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.userInfoForUpdateDTO === null || requestParameters.userInfoForUpdateDTO === undefined) {
            throw new runtime.RequiredError('userInfoForUpdateDTO','Required parameter requestParameters.userInfoForUpdateDTO was null or undefined when calling updateUserInfo.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/safe/user`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: UserInfoForUpdateDTOToJSON(requestParameters.userInfoForUpdateDTO),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Update current user info.
     */
    async updateUserInfo(requestParameters: UpdateUserInfoRequest): Promise<void> {
        await this.updateUserInfoRaw(requestParameters);
    }

}
